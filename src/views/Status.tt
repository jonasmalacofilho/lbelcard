(: using StringTools :)
(: import db.types.* :)
(: static function render (card : CardRequestState) :)

(: do var err = switch(card) {case Failed(err, s): err; default: null;} :)


<script>
    $(document).ready(function()
    {
        setTimeout(function(){window.location.reload();}, 30000);
    });
</script>
<div class="ui vertical segment">
    <div class="ui container">
        <div class="ui four stackable steps">
            <div class="step (:compare(card,AwaitingBearerData).trim():)">
                <i class="(:icon(card,AwaitingBearerData).trim():) icon"></i>
                <div class="content">
                    <div class="title">Dados Pessoais</div>
                    
                </div>
            </div>

            <div class="step (:compare(card,AwaitingBearerConfirmation).trim():)">
                <i class="(:icon(card,AwaitingBearerConfirmation).trim():) icon"></i>
                <div class="content">
                    <div class="title">Confirmação</div>
                    
                </div>
            </div>

            <div class="step (:compare(card, AcessoCard(null)).trim():) negative">
                <i class="(:icon(card,AcessoCard(null)).trim():) icon"></i>
                <div class="content">
                    <div class='title'>Análise</div>
                    
                </div>
            </div>

            <div class="step (:compare(card, CardRequested).trim():)">
                <i class="(:icon(card,CardRequested).trim():) icon"></i>
                <div class="content">
                <div class="title">Concluído</div>
                
                </div>
            </div>
        </div>
    </div>
</div>    

    (: if err.match(AcessoUserOrDataError(res)) || err.match(AcessoPermanentError(res)) :)
        
        <div class="ui segment">
            <div class="ui container">
                <div class="ui red message">
                    <div class="header">Ocorreu um erro nesta etapa</div>
                    (: switch err :)
                        (: case AcessoUserOrDataError(res),AcessoPermanentError(res) :)
                            (:res.Message:)
                            (: if res.FieldErrors != null :)
                                <ul>
                                (: for r in res.FieldErrors :)
                                    <li>(:r.Message:)</li>
                                (: end :)
                                </ul>
                            (:end:)
                        (: case AcessoTemporaryError(_), TransportError(_), AcessoTokenError(_), JumpToError(_), SendGridError(_) :)
                            //Shouldnt be here
                    (: end :)
                </div>
            </div>
        </div>
    (:else:) (:end:)

(:end:)

(: static function compare(cur : CardRequestState, baseline : CardRequestState) :)
    
    (: switch(cur) :)
    (: case Failed(err,s) :)
        (: do cur = s :)
    (: case v :)
    (:end:)

    (: do var curIndex = Type.enumIndex(cur) :)
    (: do var baseIndex = Type.enumIndex(baseline) :)

    (: if (curIndex > baseIndex) :)
        completed
    (: else if (curIndex == baseIndex) :)
        active
    (: else if (curIndex < baseIndex) :)
        disabled
    (:else:) (:end:)
(:end:)

(: static function icon(cur : CardRequestState, baseline : CardRequestState) :)
    (: do var isErr = false :)
    (: switch(cur) :)
    (: case Failed(err,s) :)
        (: if err.match(AcessoPermanentError(_)) || err.match(AcessoUserOrDataError(_)) :)
            (: do isErr = true :)
        (:end:)
        (: do cur = s :)
    (: case v :)
    (:end:)

    (: if isErr && baseline != CardRequested :)
        red remove
    (: else :)
        (: switch baseline :)
            (: case AwaitingBearerData :)
                add user
            (: case AwaitingBearerConfirmation :)
                info circle
            (: case AcessoCard(_) :)
                zoom in
            (: case CardRequested if(!isErr) :)
                checkmark
            (: case CardRequested if(isErr) :)
                remove
            (: case CardRequested :)
            (: case Failed(_),SendEmail:)
        (:end:)
    (:end:)


(:end:)