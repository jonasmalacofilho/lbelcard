limit_req_zone $binary_remote_addr zone=static:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=dynamic:10m rate=2r/s;

# blocking due to penetration attempts starting Fri Jan 26 2018, 23:14:57 -02
deny 63.157.13.156;

# HTTP - redirect all requests to HTTPS
server {
	listen 80;
	listen [::]:80;
	server_name *.lbelcard.com.br *.lbelcard.robrt.io;
	limit_req zone=static;
	return 307 https://$host$request_uri;
}

# HTTPS
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
	server_name lbelcard.com.br lbelcard.robrt.io;

	keepalive_timeout 300;

	ssl on;
	# Use certificate and key provided by Let's Encrypt:
	ssl_certificate /etc/letsencrypt/live/lbelcard.com.br/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/lbelcard.com.br/privkey.pem;
	# protocols and ciphers... the defaults should be fine (nginx 1.10+)
	# ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	# ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:5m;
	ssl_session_timeout 1h;

	include mime.types;
	types {
		application/haxedata                  haxedata;  # haxe serialized data
		# application/font-woff                 woff;  # already in nginx 1.10+
		application/font-woff2                woff2;
		# application/vnd.ms-fontobject         eot;  # already in nginx 1.10+
		application/x-font-ttf                ttc ttf;
		font/opentype                         otf;
	}
	# ref: https://github.com/h5bp/server-configs-nginx/blob/master/mime.types

	# use default value
	# client_max_body_size 200m;

	# optimize all static content delivery
	sendfile on;
	sendfile_max_chunk 1m;
	tcp_nopush on;
	gzip on;
	gzip_comp_level 5;
	gzip_min_length 256;
	gzip_types
		application/haxedata
		application/javascript
		application/json
		font/opentype
		image/bmp
		image/svg+xml
		image/x-icon
		text/cache-manifest
		text/css
		text/plain;
	# ref: https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf

	if_modified_since off;
	# if 503 due to rate limiting, only retry after some time
	add_header 'Retry-After' 3 always;

	location / {
		limit_req zone=static burst=20 nodelay;

		expires 10m;
		root /var/www/lbelcard.com.br;
		try_files $uri $uri/ /index.n$uri?$args;
		index index.html index.htm index.n;

		# proxy tora
		location /index.n {
			expires off;
			limit_req zone=dynamic burst=10 nodelay;
			fastcgi_split_path_info           ^(.+\.n)(/.+)$;
			fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
			fastcgi_param  DOCUMENT_URI       $fastcgi_path_info;
			fastcgi_param  REMOTE_ADDR        $remote_addr;
			fastcgi_param  QUERY_STRING       $query_string;
			fastcgi_param  SERVER_NAME        $host;
			fastcgi_param  REQUEST_METHOD     $request_method;
			fastcgi_param  CONTENT_TYPE       $content_type;
			fastcgi_pass                      127.0.0.1:6666;
		}
	}

	# proxy tora admin
	location /tora/admin {
		limit_req zone=dynamic;
		fastcgi_split_path_info           ^(.+\.n)(/.+)$;
		fastcgi_param  SCRIPT_FILENAME    /usr/local/lib/tora_admin.n;
		fastcgi_param  DOCUMENT_URI       $fastcgi_path_info;
		fastcgi_param  REMOTE_ADDR        $remote_addr;
		fastcgi_param  QUERY_STRING       $query_string;
		fastcgi_param  SERVER_NAME        $host;
		fastcgi_param  REQUEST_METHOD     $request_method;
		fastcgi_param  CONTENT_TYPE       $content_type;
		fastcgi_pass                      127.0.0.1:6666;
	}

	# proxy Robrt
	location /robrt/incoming {
		limit_req zone=dynamic burst=4;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;
		proxy_pass http://localhost:6667;
		proxy_ssl_session_reuse off;
		proxy_set_header Host $http_host;
		proxy_cache_bypass $http_upgrade;
		proxy_redirect off;
	}

	# allow cross-origin requests for the robrt logs
	location /robrt/logs {
		limit_req zone=static burst=20 nodelay;
		add_header 'Retry-After' 3 always;
		root /var/www;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Credentials' 'false';
		add_header 'Access-Control-Allow-Methods' 'GET';
	}

}

